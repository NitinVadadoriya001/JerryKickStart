{"ast":null,"code":"import Web3 from \"web3\";\nlet web3;\n\nif (false && typeof window.ethereum !== \"undefined\") {\n  // We are in the browser and MetaMask is running.\n  try {\n    window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    web3 = new Web3(window.ethereum);\n  } catch (error) {\n    console.error(\"Error requesting accounts:\", error.message);\n  }\n} else {\n  // We are on the server *OR* the user is not running MetaMask.\n  const provider = new Web3.providers.HttpProvider(\"https://sepolia.infura.io/v3/0816730807ce471ea107f4ecdf834614\");\n  web3 = new Web3(provider);\n} // metamask have connection with other node\n// infura have they own node","map":{"version":3,"sources":["/home/nitin/Desktop/kickstart/ethereum/web3.js"],"names":["Web3","web3","window","ethereum","request","method","error","console","message","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEA,IAAI,SAAiC,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAAhE,EAA6E;AAC3E;AACA,MAAI;AACFD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAxB;AACAJ,IAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAP;AACD,GAHD,CAGE,OAAOG,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,4BAAd,EAA4CA,KAAK,CAACE,OAAlD;AACD;AACF,CARD,MAQO;AACL;AACA,QAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACU,SAAL,CAAeC,YAAnB,CACf,+DADe,CAAjB;AAGAV,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASS,QAAT,CAAP;AACD,C,CACD;AACA","sourcesContent":["import Web3 from \"web3\";\n\nlet web3;\n\nif (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n  // We are in the browser and MetaMask is running.\n  try {\n    window.ethereum.request({ method: \"eth_requestAccounts\" });\n    web3 = new Web3(window.ethereum);\n  } catch (error) {\n    console.error(\"Error requesting accounts:\", error.message);\n  }\n} else {\n  // We are on the server *OR* the user is not running MetaMask.\n  const provider = new Web3.providers.HttpProvider(\n    \"https://sepolia.infura.io/v3/0816730807ce471ea107f4ecdf834614\"\n  );\n  web3 = new Web3(provider);\n}\n// metamask have connection with other node\n// infura have they own node\n"]},"metadata":{},"sourceType":"module"}